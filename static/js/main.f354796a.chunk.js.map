{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","components/Articles.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Articles","articles","className","article","index","data-testid","key","title","upvotes","date","App","React","useState","sortedby","setSortedBy","sort","a","b","Date","header","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.f354796a.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t18,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 13;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\n\r\nfunction Articles({articles}) {\r\n    return (\r\n        <div className=\"card w-50 mx-auto\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Upvotes</th>\r\n                    <th>Date</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n               {articles.map((article, index)=>(\r\n                    <tr data-testid=\"article\" key={index}>\r\n                    <td data-testid=\"article-title\">{article.title}</td>\r\n                    <td data-testid=\"article-upvotes\">{article.upvotes}</td>\r\n                    <td data-testid=\"article-date\">{article.date}</td>\r\n                </tr>\r\n               ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Articles;","import React from 'react';\r\nimport './App.css';\r\nimport 'h8k-components';\r\n\r\nimport Articles from './components/Articles';\r\n\r\nconst title = \"Sorting Articles\";\r\n\r\nfunction App({articles}) {\r\n    const [sortedby, setSortedBy] = React.useState(0);\r\n    let refinedArticles = function(){\r\n        if(sortedby === 0){\r\n            let r =   articles.sort((a,b) => (b.upvotes > a.upvotes) ? 1 : ((a.upvotes > b.upvotes) ? -1 : 0));\r\n            return r;\r\n        }else{\r\n            let r =   articles.sort((a,b) => (new Date(b.date) > new Date(a.date)) ? 1 : ((new Date(a.date) > new Date(b.date)) ? -1 : 0));\r\n            return r;\r\n        }\r\n    }\r\n    articles  = refinedArticles();\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h8k-navbar header={title}></h8k-navbar>\r\n            <div className=\"layout-row align-items-center justify-content-center my-20 navigation\">\r\n                <label className=\"form-hint mb-0 text-uppercase font-weight-light\">Sort By</label>\r\n                <button onClick={()=>setSortedBy(0)} data-testid=\"most-upvoted-link\" className=\"small\">Most Upvoted</button>\r\n                <button onClick={()=>setSortedBy(1)} data-testid=\"most-recent-link\" className=\"small\">Most Recent</button>\r\n            </div>\r\n            <Articles articles={articles}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\r\n\r\nconst ARTICLES = [\r\n  {\r\n    title: \"A message to our customers\",\r\n    upvotes: 12,\r\n    date: \"2020-01-24\",\r\n  },\r\n  {\r\n    title: \"Alphabet earnings\",\r\n    upvotes: 22,\r\n    date: \"2019-11-23\",\r\n  },\r\n  {\r\n    title: \"Artificial Mountains\",\r\n    upvotes: 2,\r\n    date: \"2019-11-22\",\r\n  },\r\n  {\r\n    title: \"Scaling to 100k Users\",\r\n    upvotes: 72,\r\n    date: \"2019-01-21\",\r\n  },\r\n  {\r\n    title: \"the Emu War\",\r\n    upvotes: 24,\r\n    date: \"2019-10-21\",\r\n  },\r\n  {\r\n    title: \"What's SAP\",\r\n    upvotes: 1,\r\n    date: \"2019-11-21\",\r\n  },\r\n  {\r\n    title: \"Simple text editor has 15k monthly users\",\r\n    upvotes: 7,\r\n    date: \"2010-12-31\",\r\n  },\r\n];\r\n\r\nReactDOM.render(<App articles={ARTICLES} />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\napplyPolyfills().then(() => {\r\n    defineCustomElements(window);\r\n})\r\n"],"sourceRoot":""}